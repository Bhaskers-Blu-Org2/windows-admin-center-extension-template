[{"__symbolic":"module","version":3,"metadata":{"User":{"__symbolic":"interface"},"SortEvent":{"__symbolic":"interface"},"ConnectionModel":{"__symbolic":"interface"},"ConnectionsListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-connections-list","template":"\n      <sme-master-view [showFilter]=\"false\" [total]=\"connections ? connections.length : 0\" [(selection)]=\"selectedConnections\" (refresh)=\"refresh(selectedConnections)\" (clearSelection)=\"selectedConnections = null\">\n          <sme-action-bar>\n              <sme-action-button #action [text]=\"strings.actions.add\" [iconClass]=\"'sme-icon sme-icon-add'\" (execute)=\"addConnection()\"></sme-action-button>\n              <sme-action-button #action [text]=\"strings.actions.connect\" [iconClass]=\"'sme-icon sme-icon-toolbox'\" [enabled]=\"!!selectedConnections && selectedConnections.length == 1\" (execute)=\"openDefaultAction(selectedConnections[0], true)\"></sme-action-button>\n              <sme-action-button #action [text]=\"strings.actions.manageAs\" [iconClass]=\"'sme-icon sme-icon-manage'\" [enabled]=\"!!selectedConnections && selectedConnections.length > 0\" (execute)=\"getToken(selectedConnections)\"></sme-action-button>\n              <sme-action-button #action [text]=\"strings.actions.remove\" [iconClass]=\"'sme-icon sme-icon-delete'\" [enabled]=\"!!selectedConnections && selectedConnections.length > 0\" (execute)=\"removeConnection(selectedConnections)\"></sme-action-button>\n              <sme-action-button #action [text]=\"strings.actions.editTags\" [iconClass]=\"'sme-icon sme-icon-edit'\" [enabled]=\"!!selectedConnections && selectedConnections.length > 0\" (execute)=\"editConnectionTags(selectedConnections)\"></sme-action-button>\n          </sme-action-bar>\n\n          <input #search type=\"search\" name=\"connectionsFilter\" [placeholder]=\"strings.actions.search.placeholder\" autofocus [formControl]=\"filterInput\" role=\"search\"/>\n          <sme-loading-wheel *ngIf=\"pendingConnectToId\" [message]=\"strings.listStatus.message | smeFormat:pendingConnectToName\"></sme-loading-wheel>\n    \n          <sme-data-table #smeDataTable [items]=\"connections\" selectionMode=\"multiple\" [(selection)]=\"selectedConnections\" [defaultSortColumn]=\"defaultSortColumn\" [defaultSortMode]=\"1\" [class.hideNoData]=\"connectionsReady && (!connections || connections.length <= 0) && gettingStarted\"\n              (onRowDblclick)=\"openDefaultAction($event.data)\" [loadingMessage]=\"strings.empty.loading\" [noRecordMessage]=\"strings.gettingStarted.title.format | smeFormat:shellStrings.applicationTitle\">\n\n              <sme-data-table-column #defaultSortColumn field=\"name\" header=\"{{strings.nodeNameHeader}}\" sortable=\"custom\" [compareFunction]=\"sortCompareFunction\">\n                  <ng-template let-data>\n                      <div [title]=\"data.name\">\n                          <span [ngClass]=\"['status-icon sme-icon', data.typeIcon]\"></span>\n                          <a (click)=\"openDefaultAction(data, true)\" tabindex=\"0\" class=\"sme-link\">{{data.name}}</a>\n                      </div>\n                  </ng-template>\n              </sme-data-table-column>\n\n              <sme-data-table-column field=\"typeDisplay\" header=\"{{strings.nodeTypeHeader}}\" sortable=\"custom\" [compareFunction]=\"sortCompareFunction\">\n                  <ng-template let-data>\n                      <span [title]=\"data.typeName\">{{data.typeName}}</span>\n                  </ng-template>\n              </sme-data-table-column>\n\n              <sme-data-table-column field=\"lastUpdated\" header=\"{{strings.nodeLastConnectedHeader}}\" sortable=\"custom\" [compareFunction]=\"sortCompareFunction\">\n                  <ng-template let-data>\n                      <span [title]=\"data.lastUpdated\">{{data.lastUpdated}}</span>\n                  </ng-template>\n              </sme-data-table-column>\n\n              <sme-data-table-column field=\"managingAs\" header=\"{{strings.nodeManagingAsHeader}}\" sortable=\"custom\" [compareFunction]=\"sortCompareFunction\">\n                  <ng-template let-data>\n                      <span [title]=\"data.user\">{{data.user}}</span>\n                  </ng-template>\n              </sme-data-table-column>\n\n              <sme-data-table-column field=\"tags\" header=\"{{strings.nodeTagsHeader}}\">\n                  <ng-template let-data>\n                      <div class=\"sme-arrange-ellipsis\">\n                          <span class=\"sme-tag\" [title]=\"data.connection.tags\" *ngFor=\"let tag of data.connection.tags\">\n                          <span class=\"sme-tag-content\">{{tag}}</span>\n                          </span>\n                      </div>\n                  </ng-template>\n              </sme-data-table-column>\n          </sme-data-table>\n\n      </sme-master-view>\n    ","styles":["\n      .status-icon:before{\n          line-height: 1;\n          vertical-align: bottom;\n      }\n\n      .status-icon {\n          display: inline-block;\n          width: 16px;\n          line-height: 16px;\n          margin-right: 5px;\n      }\n\n      .getting-started {\n          z-index: 1;\n          margin: 24px 34px;\n      }\n\n      .getting-started-image {\n          margin: 24px;\n          height: 70px;\n          color: #0078d7;\n          font-size: 15px;\n      }\n\n      .getting-started-add-action-bar {\n          align-self: flex-end;\n          margin-bottom: 4px;\n          margin-left: 5px;\n      }\n\n      .getting-started-add-action-bar:before {\n          margin-right: 10px;\n      }\n\n      .getting-started-add-header {\n          align-self: flex-end;\n          height: 36px;\n          width: 36px;\n          background: #0078d7;\n          color: white;\n          vertical-align: middle;\n          margin-left: 90px;\n          margin-right: 5px;\n      }\n\n      .getting-started-add-header:before {\n          width: 100%;\n          vertical-align: middle;\n          line-height: 36px;\n          text-align: center;\n      }\n\n      :host >>> .ui-state-highlight .color-info,\n      :host >>> .ui-state-highlight .color-success,\n      :host >>> .ui-state-highlight .color-error,\n      :host >>> .ui-state-highlight .color-warning{\n          color: #242424;\n      }\n\n      :host >>> .ui-state-highlight a {\n          text-decoration: underline;\n      }\n\n      :host >>> .ui-state-highlight a:hover,\n      :host >>> .ui-state-highlight a:active,\n      :host >>> .ui-state-highlight a:focus {\n          text-decoration: none;\n      }\n\n      :host >>> button {\n          min-width: 0px !important;\n      }\n    "]}]}],"members":{"solution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["smeDataTable"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../../../angular","name":"AppContextService"},{"__symbolic":"reference","module":"../../../shell.service","name":"ShellService"},{"__symbolic":"reference","module":"../../../../angular","name":"DialogService"},{"__symbolic":"reference","module":"../../../../angular","name":"AlertBarService"},{"__symbolic":"reference","module":"@angular/router","name":"Router"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"refresh":[{"__symbolic":"method"}],"addConnection":[{"__symbolic":"method"}],"removeConnection":[{"__symbolic":"method"}],"editConnectionTags":[{"__symbolic":"method"}],"openDefaultAction":[{"__symbolic":"method"}],"closeLoadingConnectionDialog":[{"__symbolic":"method"}],"openConnection":[{"__symbolic":"method"}],"checkConnection":[{"__symbolic":"method"}],"getManagingAs":[{"__symbolic":"method"}],"getToken":[{"__symbolic":"method"}],"navigateToConnectionModel":[{"__symbolic":"method"}],"showConfirmationDialog":[{"__symbolic":"method"}],"startListening":[{"__symbolic":"method"}],"dataToModelConnection":[{"__symbolic":"method"}],"updateToModel":[{"__symbolic":"method"}],"getStatusClass":[{"__symbolic":"method"}],"getSortableValue":[{"__symbolic":"method"}],"sortCollection":[{"__symbolic":"method"}],"checkSearchFilter":[{"__symbolic":"method"}],"filterConnections":[{"__symbolic":"method"}],"getLastUpdateTime":[{"__symbolic":"method"}]},"statics":{"navigationTitle":{"__symbolic":"function","parameters":["appContextService","snapshot"],"value":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"MsftSme"},"member":"resourcesStrings"}},"member":"MsftSmeShell"},"member":"App"},"member":"Connections"},"member":"title"}}}}}},{"__symbolic":"module","version":1,"metadata":{"User":{"__symbolic":"interface"},"SortEvent":{"__symbolic":"interface"},"ConnectionModel":{"__symbolic":"interface"},"ConnectionsListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-connections-list","template":"\n      <sme-master-view [showFilter]=\"false\" [total]=\"connections ? connections.length : 0\" [(selection)]=\"selectedConnections\" (refresh)=\"refresh(selectedConnections)\" (clearSelection)=\"selectedConnections = null\">\n          <sme-action-bar>\n              <sme-action-button #action [text]=\"strings.actions.add\" [iconClass]=\"'sme-icon sme-icon-add'\" (execute)=\"addConnection()\"></sme-action-button>\n              <sme-action-button #action [text]=\"strings.actions.connect\" [iconClass]=\"'sme-icon sme-icon-toolbox'\" [enabled]=\"!!selectedConnections && selectedConnections.length == 1\" (execute)=\"openDefaultAction(selectedConnections[0], true)\"></sme-action-button>\n              <sme-action-button #action [text]=\"strings.actions.manageAs\" [iconClass]=\"'sme-icon sme-icon-manage'\" [enabled]=\"!!selectedConnections && selectedConnections.length > 0\" (execute)=\"getToken(selectedConnections)\"></sme-action-button>\n              <sme-action-button #action [text]=\"strings.actions.remove\" [iconClass]=\"'sme-icon sme-icon-delete'\" [enabled]=\"!!selectedConnections && selectedConnections.length > 0\" (execute)=\"removeConnection(selectedConnections)\"></sme-action-button>\n              <sme-action-button #action [text]=\"strings.actions.editTags\" [iconClass]=\"'sme-icon sme-icon-edit'\" [enabled]=\"!!selectedConnections && selectedConnections.length > 0\" (execute)=\"editConnectionTags(selectedConnections)\"></sme-action-button>\n          </sme-action-bar>\n\n          <input #search type=\"search\" name=\"connectionsFilter\" [placeholder]=\"strings.actions.search.placeholder\" autofocus [formControl]=\"filterInput\" role=\"search\"/>\n          <sme-loading-wheel *ngIf=\"pendingConnectToId\" [message]=\"strings.listStatus.message | smeFormat:pendingConnectToName\"></sme-loading-wheel>\n    \n          <sme-data-table #smeDataTable [items]=\"connections\" selectionMode=\"multiple\" [(selection)]=\"selectedConnections\" [defaultSortColumn]=\"defaultSortColumn\" [defaultSortMode]=\"1\" [class.hideNoData]=\"connectionsReady && (!connections || connections.length <= 0) && gettingStarted\"\n              (onRowDblclick)=\"openDefaultAction($event.data)\" [loadingMessage]=\"strings.empty.loading\" [noRecordMessage]=\"strings.gettingStarted.title.format | smeFormat:shellStrings.applicationTitle\">\n\n              <sme-data-table-column #defaultSortColumn field=\"name\" header=\"{{strings.nodeNameHeader}}\" sortable=\"custom\" [compareFunction]=\"sortCompareFunction\">\n                  <ng-template let-data>\n                      <div [title]=\"data.name\">\n                          <span [ngClass]=\"['status-icon sme-icon', data.typeIcon]\"></span>\n                          <a (click)=\"openDefaultAction(data, true)\" tabindex=\"0\" class=\"sme-link\">{{data.name}}</a>\n                      </div>\n                  </ng-template>\n              </sme-data-table-column>\n\n              <sme-data-table-column field=\"typeDisplay\" header=\"{{strings.nodeTypeHeader}}\" sortable=\"custom\" [compareFunction]=\"sortCompareFunction\">\n                  <ng-template let-data>\n                      <span [title]=\"data.typeName\">{{data.typeName}}</span>\n                  </ng-template>\n              </sme-data-table-column>\n\n              <sme-data-table-column field=\"lastUpdated\" header=\"{{strings.nodeLastConnectedHeader}}\" sortable=\"custom\" [compareFunction]=\"sortCompareFunction\">\n                  <ng-template let-data>\n                      <span [title]=\"data.lastUpdated\">{{data.lastUpdated}}</span>\n                  </ng-template>\n              </sme-data-table-column>\n\n              <sme-data-table-column field=\"managingAs\" header=\"{{strings.nodeManagingAsHeader}}\" sortable=\"custom\" [compareFunction]=\"sortCompareFunction\">\n                  <ng-template let-data>\n                      <span [title]=\"data.user\">{{data.user}}</span>\n                  </ng-template>\n              </sme-data-table-column>\n\n              <sme-data-table-column field=\"tags\" header=\"{{strings.nodeTagsHeader}}\">\n                  <ng-template let-data>\n                      <div class=\"sme-arrange-ellipsis\">\n                          <span class=\"sme-tag\" [title]=\"data.connection.tags\" *ngFor=\"let tag of data.connection.tags\">\n                          <span class=\"sme-tag-content\">{{tag}}</span>\n                          </span>\n                      </div>\n                  </ng-template>\n              </sme-data-table-column>\n          </sme-data-table>\n\n      </sme-master-view>\n    ","styles":["\n      .status-icon:before{\n          line-height: 1;\n          vertical-align: bottom;\n      }\n\n      .status-icon {\n          display: inline-block;\n          width: 16px;\n          line-height: 16px;\n          margin-right: 5px;\n      }\n\n      .getting-started {\n          z-index: 1;\n          margin: 24px 34px;\n      }\n\n      .getting-started-image {\n          margin: 24px;\n          height: 70px;\n          color: #0078d7;\n          font-size: 15px;\n      }\n\n      .getting-started-add-action-bar {\n          align-self: flex-end;\n          margin-bottom: 4px;\n          margin-left: 5px;\n      }\n\n      .getting-started-add-action-bar:before {\n          margin-right: 10px;\n      }\n\n      .getting-started-add-header {\n          align-self: flex-end;\n          height: 36px;\n          width: 36px;\n          background: #0078d7;\n          color: white;\n          vertical-align: middle;\n          margin-left: 90px;\n          margin-right: 5px;\n      }\n\n      .getting-started-add-header:before {\n          width: 100%;\n          vertical-align: middle;\n          line-height: 36px;\n          text-align: center;\n      }\n\n      :host >>> .ui-state-highlight .color-info,\n      :host >>> .ui-state-highlight .color-success,\n      :host >>> .ui-state-highlight .color-error,\n      :host >>> .ui-state-highlight .color-warning{\n          color: #242424;\n      }\n\n      :host >>> .ui-state-highlight a {\n          text-decoration: underline;\n      }\n\n      :host >>> .ui-state-highlight a:hover,\n      :host >>> .ui-state-highlight a:active,\n      :host >>> .ui-state-highlight a:focus {\n          text-decoration: none;\n      }\n\n      :host >>> button {\n          min-width: 0px !important;\n      }\n    "]}]}],"members":{"solution":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"dataTable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["smeDataTable"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../../../angular","name":"AppContextService"},{"__symbolic":"reference","module":"../../../shell.service","name":"ShellService"},{"__symbolic":"reference","module":"../../../../angular","name":"DialogService"},{"__symbolic":"reference","module":"../../../../angular","name":"AlertBarService"},{"__symbolic":"reference","module":"@angular/router","name":"Router"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"refresh":[{"__symbolic":"method"}],"addConnection":[{"__symbolic":"method"}],"removeConnection":[{"__symbolic":"method"}],"editConnectionTags":[{"__symbolic":"method"}],"openDefaultAction":[{"__symbolic":"method"}],"closeLoadingConnectionDialog":[{"__symbolic":"method"}],"openConnection":[{"__symbolic":"method"}],"checkConnection":[{"__symbolic":"method"}],"getManagingAs":[{"__symbolic":"method"}],"getToken":[{"__symbolic":"method"}],"navigateToConnectionModel":[{"__symbolic":"method"}],"showConfirmationDialog":[{"__symbolic":"method"}],"startListening":[{"__symbolic":"method"}],"dataToModelConnection":[{"__symbolic":"method"}],"updateToModel":[{"__symbolic":"method"}],"getStatusClass":[{"__symbolic":"method"}],"getSortableValue":[{"__symbolic":"method"}],"sortCollection":[{"__symbolic":"method"}],"checkSearchFilter":[{"__symbolic":"method"}],"filterConnections":[{"__symbolic":"method"}],"getLastUpdateTime":[{"__symbolic":"method"}]},"statics":{"navigationTitle":{"__symbolic":"function","parameters":["appContextService","snapshot"],"value":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"MsftSme"},"member":"resourcesStrings"}},"member":"MsftSmeShell"},"member":"App"},"member":"Connections"},"member":"title"}}}}}}]