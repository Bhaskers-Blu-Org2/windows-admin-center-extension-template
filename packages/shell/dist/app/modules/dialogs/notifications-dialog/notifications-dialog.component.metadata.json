[{"__symbolic":"module","version":3,"metadata":{"NotificationsDialogComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../app-bar-dialog.component","name":"AppBarBaseDialogComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-notifications-dialog","template":"\n      <sme-dialog id=\"sme-notifications\" #dialog [showBackdrop]=\"false\" dialogMode=\"compact\" class=\"sme-theme-dark\">\n\n        <!-- All Notifications -->\n        <sme-dialog-header *ngIf=\"!selectedNotification\">\n          <div class=\"sme-arrange-stack-h\">\n            <h2 id=\"sme-dialog-title\" class=\"sme-position-flex-auto\">{{strings.MsftSmeShell.App.NotificationsDialog.title}}</h2>\n            <button class=\"sme-button-trigger sme-position-flex-none\" (click)=\"clearAll()\">\n              <span class=\"sme-icon sme-icon-clear sme--xxs\"></span>\n              <span>{{strings.MsftSmeShell.App.NotificationsDialog.clearAll}}</span>\n            </button>\n          </div>\n        </sme-dialog-header>\n        <sme-dialog-content *ngIf=\"!selectedNotification\" class=\"sme-layout-content-zone\">\n          <div role=\"cell\" [id]=\"getNotificationElementId(msg)\" *ngFor=\"let msg of msgs\" class=\"sme-scheme-nav-menu-item sme-padding-squish-v-lg sme-behavior-hover-trigger\"\n            tabindex=\"0\" (click)=\"selectNotification(msg)\" (keydown.space)=\"selectNotification(msg)\" (keydown.enter)=\"selectNotification(msg)\">\n            <!-- Title -->\n            <div class=\" sme-arrange-stack-h\">\n              <!-- Icon -->\n              <div class=\"sme-position-flex-none sme-padding-right-xs\">\n                <div *ngIf=\"msg.state === 4\" class=\"sme-icon sme-icon-error sme-icon-size-sm\"></div>\n                <div *ngIf=\"msg.state === 7 || msg.state === 1 || msg.state === 3\" class=\"sme-icon sme-icon-info sme-icon-size-sm\"></div>\n                <div *ngIf=\"msg.state === 5\" class=\"sme-icon sme-icon-warning sme-icon-size-sm\"></div>\n                <div *ngIf=\"msg.state === 6\" class=\"sme-icon sme-icon-completed sme-icon-size-sm\"></div>\n                <div *ngIf=\"msg.state === 2\" class=\"sme-icon sme-icon-sync sme-icon-size-sm\"></div>\n              </div>\n              <!-- Title Text -->\n              <div class=\"sme-position-flex-auto sme-arrange-ellipsis\">{{ getNotificationTitle(msg) }}</div>\n\n              <!-- Clear Button -->\n              <button [id]=\"getRemoveNotificationId(msg)\" class=\"sme-button-trigger sme-button-auto-width sme-position-flex-none sme-padding-inset-none sme-behavior-hover-trigger\"\n                (click)=\"removeNotification(msg)\">\n                <span class=\"sme-icon sme-icon-cancel sme-behavior-hover-target-show\" [title]=\"strings.MsftSmeShell.App.NotificationsDialog.clear\"></span>\n              </button>\n            </div>\n            <!-- Details -->\n            <div class=\"sme-arrange-stack-h sme-padding-top-xxs sme-padding-left-lg sme-font-label\">\n              <div class=\"sme-position-flex-auto sme-arrange-ellipsis\">{{ msg.nodeName }}</div>\n              <div class=\"sme-position-flex-none\">{{ msg.changedTimestamp | date: 'short' }}</div>\n            </div>\n            <!-- Progress -->\n            <div *ngIf=\"msg.state === 2\" class=\"sme-arrange-stack-h\">\n              <!-- Determinate -->\n              <progress *ngIf=\"msg.progressPercent\" class=\"sme-progress\" role=\"progressbar\" max=\"100\" value=\"{{msg.progressPercent}}\" tabindex=\"0\"\n                [attr.aria-valuenow]=\"msg.progressPercent\" aria-valuemin=\"0\" aria-valuemax=\"100\" [attr.aria-label]=\"strings.MsftSmeShell.App.NotificationsDialog.DeterminateProgress.AriaLabel.format(msg.progressPercent)\"></progress>\n\n              <!-- Indeterminate -->\n              <div *ngIf=\"!msg.progressPercent\" class=\"sme-progress sme-progress-indeterminate-regional sme-progress-small\" [ngClass]=\"progressSize\"\n                role=\"progressbar\" tabindex=\"0\" [attr.aria-valuetext]=\"strings.MsftSmeShell.App.NotificationsDialog.IndeterminateProgress.AriaValueText\"\n                [attr.aria-label]=\"strings.MsftSmeShell.App.NotificationsDialog.IndeterminateProgress.AriaLabel\">\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        </sme-dialog-content>\n\n        <!-- Details Pane -->\n        <sme-dialog-content aria-live=\"assertive\" *ngIf=\"selectedNotification\">\n          <!-- Back Button -->\n          <button id=\"sme-notification-details-back-button\" (click)=\"onClickBackButton()\" class=\"sme-button-trigger sme-button-auto-width sme-padding-inset-none sme-margin-bottom-md sme-margin-top-sm\">\n            <span class=\"sme-icon sme-icon-back\"></span>\n          </button>\n          <h3 class=\"sme-screen-reader\" id=\"sme-dialog-title\">{{ strings.MsftSmeShell.App.NotificationsDialog.Details.AriaTitle }}</h3>\n          <div class=\"sme-arrange-stack-h\">\n            <!-- Icon -->\n            <div class=\"sme-position-flex-none sme-padding-right-sm\">\n              <div *ngIf=\"selectedNotification.state === 4\" class=\"sme-icon sme-icon-error sme-icon-size-sm\"></div>\n              <div *ngIf=\"selectedNotification.state === 7 || selectedNotification.state === 1 || selectedNotification.state === 3\" class=\"sme-icon sme-icon-info sme-icon-size-sm\"></div>\n              <div *ngIf=\"selectedNotification.state === 5\" class=\"sme-icon sme-icon-warning sme-icon-size-sm\"></div>\n              <div *ngIf=\"selectedNotification.state === 6\" class=\"sme-icon sme-icon-completed sme-icon-size-sm\"></div>\n              <div *ngIf=\"selectedNotification.state === 2\" class=\"sme-icon sme-icon-sync sme-icon-size-sm\"></div>\n            </div>\n            <!-- Title -->\n            <h3 class=\"sme-position-flex-auto sme-padding-bottom-sm\">{{ getNotificationTitle(selectedNotification) }}</h3>\n          </div>\n          <div id=\"sme-dialog-desc\" class=\"sme-padding-left-xl\">\n            <p>{{ selectedNotification.changedTimestamp | date: 'short' }}</p>\n            <p class=\"sme-padding-top-xs\">{{ selectedNotification.nodeName }}</p>\n            <a class=\"sme-link sme-layout-block sme-padding-top-xs\" [routerLink]=\"getRouterLink()\" [queryParams]=\"getQueryParams()\" (click)=\"this.hide();\">{{ getLinkText() }}</a>\n            <h3 class=\"sme-padding-top-lg\">{{strings.MsftSmeShell.Angular.Common.details}}</h3>\n            <p class=\"sme-padding-top-xs\">{{ selectedNotification.message }}</p>\n          </div>\n        </sme-dialog-content>\n        <sme-dialog-footer>\n            <button type=\"button\" class=\"sme-button-trigger\" (click)=\"hide()\">{{ strings.MsftSmeShell.Angular.Common.close }}</button>    \n        </sme-dialog-footer>\n      </sme-dialog>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../../../angular","name":"AppContextService"},{"__symbolic":"reference","module":"../../../../angular","name":"AlertBarService"},{"__symbolic":"reference","module":"../../../../angular","name":"DialogService"}]}],"ngOnInit":[{"__symbolic":"method"}],"isInsideNotification":[{"__symbolic":"method"}],"updateCount":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"show":[{"__symbolic":"method"}],"hide":[{"__symbolic":"method"}],"removeNotification":[{"__symbolic":"method"}],"closeRequested":[{"__symbolic":"method"}],"clearAll":[{"__symbolic":"method"}],"getRemoveNotificationId":[{"__symbolic":"method"}],"getNotificationElementId":[{"__symbolic":"method"}],"selectNotification":[{"__symbolic":"method"}],"onClickBackButton":[{"__symbolic":"method"}],"getStatusString":[{"__symbolic":"method"}],"getNotificationTitle":[{"__symbolic":"method"}],"getLinkText":[{"__symbolic":"method"}],"getRouterLink":[{"__symbolic":"method"}],"getQueryParams":[{"__symbolic":"method"}]},"statics":{"count":0}}}},{"__symbolic":"module","version":1,"metadata":{"NotificationsDialogComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"../app-bar-dialog.component","name":"AppBarBaseDialogComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"sme-notifications-dialog","template":"\n      <sme-dialog id=\"sme-notifications\" #dialog [showBackdrop]=\"false\" dialogMode=\"compact\" class=\"sme-theme-dark\">\n\n        <!-- All Notifications -->\n        <sme-dialog-header *ngIf=\"!selectedNotification\">\n          <div class=\"sme-arrange-stack-h\">\n            <h2 id=\"sme-dialog-title\" class=\"sme-position-flex-auto\">{{strings.MsftSmeShell.App.NotificationsDialog.title}}</h2>\n            <button class=\"sme-button-trigger sme-position-flex-none\" (click)=\"clearAll()\">\n              <span class=\"sme-icon sme-icon-clear sme--xxs\"></span>\n              <span>{{strings.MsftSmeShell.App.NotificationsDialog.clearAll}}</span>\n            </button>\n          </div>\n        </sme-dialog-header>\n        <sme-dialog-content *ngIf=\"!selectedNotification\" class=\"sme-layout-content-zone\">\n          <div role=\"cell\" [id]=\"getNotificationElementId(msg)\" *ngFor=\"let msg of msgs\" class=\"sme-scheme-nav-menu-item sme-padding-squish-v-lg sme-behavior-hover-trigger\"\n            tabindex=\"0\" (click)=\"selectNotification(msg)\" (keydown.space)=\"selectNotification(msg)\" (keydown.enter)=\"selectNotification(msg)\">\n            <!-- Title -->\n            <div class=\" sme-arrange-stack-h\">\n              <!-- Icon -->\n              <div class=\"sme-position-flex-none sme-padding-right-xs\">\n                <div *ngIf=\"msg.state === 4\" class=\"sme-icon sme-icon-error sme-icon-size-sm\"></div>\n                <div *ngIf=\"msg.state === 7 || msg.state === 1 || msg.state === 3\" class=\"sme-icon sme-icon-info sme-icon-size-sm\"></div>\n                <div *ngIf=\"msg.state === 5\" class=\"sme-icon sme-icon-warning sme-icon-size-sm\"></div>\n                <div *ngIf=\"msg.state === 6\" class=\"sme-icon sme-icon-completed sme-icon-size-sm\"></div>\n                <div *ngIf=\"msg.state === 2\" class=\"sme-icon sme-icon-sync sme-icon-size-sm\"></div>\n              </div>\n              <!-- Title Text -->\n              <div class=\"sme-position-flex-auto sme-arrange-ellipsis\">{{ getNotificationTitle(msg) }}</div>\n\n              <!-- Clear Button -->\n              <button [id]=\"getRemoveNotificationId(msg)\" class=\"sme-button-trigger sme-button-auto-width sme-position-flex-none sme-padding-inset-none sme-behavior-hover-trigger\"\n                (click)=\"removeNotification(msg)\">\n                <span class=\"sme-icon sme-icon-cancel sme-behavior-hover-target-show\" [title]=\"strings.MsftSmeShell.App.NotificationsDialog.clear\"></span>\n              </button>\n            </div>\n            <!-- Details -->\n            <div class=\"sme-arrange-stack-h sme-padding-top-xxs sme-padding-left-lg sme-font-label\">\n              <div class=\"sme-position-flex-auto sme-arrange-ellipsis\">{{ msg.nodeName }}</div>\n              <div class=\"sme-position-flex-none\">{{ msg.changedTimestamp | date: 'short' }}</div>\n            </div>\n            <!-- Progress -->\n            <div *ngIf=\"msg.state === 2\" class=\"sme-arrange-stack-h\">\n              <!-- Determinate -->\n              <progress *ngIf=\"msg.progressPercent\" class=\"sme-progress\" role=\"progressbar\" max=\"100\" value=\"{{msg.progressPercent}}\" tabindex=\"0\"\n                [attr.aria-valuenow]=\"msg.progressPercent\" aria-valuemin=\"0\" aria-valuemax=\"100\" [attr.aria-label]=\"strings.MsftSmeShell.App.NotificationsDialog.DeterminateProgress.AriaLabel.format(msg.progressPercent)\"></progress>\n\n              <!-- Indeterminate -->\n              <div *ngIf=\"!msg.progressPercent\" class=\"sme-progress sme-progress-indeterminate-regional sme-progress-small\" [ngClass]=\"progressSize\"\n                role=\"progressbar\" tabindex=\"0\" [attr.aria-valuetext]=\"strings.MsftSmeShell.App.NotificationsDialog.IndeterminateProgress.AriaValueText\"\n                [attr.aria-label]=\"strings.MsftSmeShell.App.NotificationsDialog.IndeterminateProgress.AriaLabel\">\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        </sme-dialog-content>\n\n        <!-- Details Pane -->\n        <sme-dialog-content aria-live=\"assertive\" *ngIf=\"selectedNotification\">\n          <!-- Back Button -->\n          <button id=\"sme-notification-details-back-button\" (click)=\"onClickBackButton()\" class=\"sme-button-trigger sme-button-auto-width sme-padding-inset-none sme-margin-bottom-md sme-margin-top-sm\">\n            <span class=\"sme-icon sme-icon-back\"></span>\n          </button>\n          <h3 class=\"sme-screen-reader\" id=\"sme-dialog-title\">{{ strings.MsftSmeShell.App.NotificationsDialog.Details.AriaTitle }}</h3>\n          <div class=\"sme-arrange-stack-h\">\n            <!-- Icon -->\n            <div class=\"sme-position-flex-none sme-padding-right-sm\">\n              <div *ngIf=\"selectedNotification.state === 4\" class=\"sme-icon sme-icon-error sme-icon-size-sm\"></div>\n              <div *ngIf=\"selectedNotification.state === 7 || selectedNotification.state === 1 || selectedNotification.state === 3\" class=\"sme-icon sme-icon-info sme-icon-size-sm\"></div>\n              <div *ngIf=\"selectedNotification.state === 5\" class=\"sme-icon sme-icon-warning sme-icon-size-sm\"></div>\n              <div *ngIf=\"selectedNotification.state === 6\" class=\"sme-icon sme-icon-completed sme-icon-size-sm\"></div>\n              <div *ngIf=\"selectedNotification.state === 2\" class=\"sme-icon sme-icon-sync sme-icon-size-sm\"></div>\n            </div>\n            <!-- Title -->\n            <h3 class=\"sme-position-flex-auto sme-padding-bottom-sm\">{{ getNotificationTitle(selectedNotification) }}</h3>\n          </div>\n          <div id=\"sme-dialog-desc\" class=\"sme-padding-left-xl\">\n            <p>{{ selectedNotification.changedTimestamp | date: 'short' }}</p>\n            <p class=\"sme-padding-top-xs\">{{ selectedNotification.nodeName }}</p>\n            <a class=\"sme-link sme-layout-block sme-padding-top-xs\" [routerLink]=\"getRouterLink()\" [queryParams]=\"getQueryParams()\" (click)=\"this.hide();\">{{ getLinkText() }}</a>\n            <h3 class=\"sme-padding-top-lg\">{{strings.MsftSmeShell.Angular.Common.details}}</h3>\n            <p class=\"sme-padding-top-xs\">{{ selectedNotification.message }}</p>\n          </div>\n        </sme-dialog-content>\n        <sme-dialog-footer>\n            <button type=\"button\" class=\"sme-button-trigger\" (click)=\"hide()\">{{ strings.MsftSmeShell.Angular.Common.close }}</button>    \n        </sme-dialog-footer>\n      </sme-dialog>\n    "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../../../angular","name":"AppContextService"},{"__symbolic":"reference","module":"../../../../angular","name":"AlertBarService"},{"__symbolic":"reference","module":"../../../../angular","name":"DialogService"}]}],"ngOnInit":[{"__symbolic":"method"}],"isInsideNotification":[{"__symbolic":"method"}],"updateCount":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"show":[{"__symbolic":"method"}],"hide":[{"__symbolic":"method"}],"removeNotification":[{"__symbolic":"method"}],"closeRequested":[{"__symbolic":"method"}],"clearAll":[{"__symbolic":"method"}],"getRemoveNotificationId":[{"__symbolic":"method"}],"getNotificationElementId":[{"__symbolic":"method"}],"selectNotification":[{"__symbolic":"method"}],"onClickBackButton":[{"__symbolic":"method"}],"getStatusString":[{"__symbolic":"method"}],"getNotificationTitle":[{"__symbolic":"method"}],"getLinkText":[{"__symbolic":"method"}],"getRouterLink":[{"__symbolic":"method"}],"getQueryParams":[{"__symbolic":"method"}]},"statics":{"count":0}}}}]