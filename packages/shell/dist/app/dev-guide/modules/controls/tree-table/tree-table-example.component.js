import { Component, ViewChild } from '@angular/core';
import { TestData } from './testData';
var TreeTableExampleComponent = /** @class */ (function () {
    function TreeTableExampleComponent() {
        this.tabIndex = 1;
        this.sampleData1 = [JSON.parse(JSON.stringify(TestData))];
    }
    TreeTableExampleComponent.prototype.refreshSampleData1 = function () {
        this.sampleData1 = [JSON.parse(JSON.stringify(TestData))];
    };
    TreeTableExampleComponent.prototype.getSampleDataItemIdentity = function (data) {
        return data.label + '|' + data.type;
    };
    TreeTableExampleComponent.prototype.clickTab = function (tabIndex) {
        this.tabIndex = tabIndex;
    };
    TreeTableExampleComponent.prototype.clearSelection = function () {
        this.selectedData2 = [];
    };
    TreeTableExampleComponent.prototype.scrollSelectedDataIntoView = function () {
        this.simpleTreeTable.scrollSelectedItemIntoView(true);
    };
    TreeTableExampleComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sme-ng2-controls-tree-table-example',
                    styles: ["\n      /* The following style is only for the example page to hardcode a height for the data table. */\n      /* In the actual UI code we don't do this to the data table. */\n      :host >>> .data-table-container{\n          position: relative;\n          height:300px\n      }\n\n      :host >>> .table-chart{\n          padding: 10px 0;\n          display: block;\n      }\n    "],
                    template: "\n      <div class=\"sme-layout-absolute sme-position-inset-none sme-arrange-stack-v\">\n          <section class=\"sme-position-flex-none\">\n              <h2>Tree Table Component</h2>\n          </section>\n\n          <section class=\"sme-position-flex-none\">\n              <br/>\n              <ul class=\"nav nav-tabs\" role=\"tablist\" role=\"presentation\">\n                  <li [class.active]=\"tabIndex===1\">\n                      <a (click)=\"clickTab(1)\">Simple Tree</a>\n                  </li>\n                  <li [class.active]=\"tabIndex===2\">\n                      <a (click)=\"clickTab(2)\">Tree Table</a>\n                  </li>\n                  <li [class.active]=\"tabIndex===3\">\n                      <a (click)=\"clickTab(3)\">Multiple Selection in Tree Table</a>\n                  </li>\n              </ul>\n              <br/>\n          </section>\n          <section *ngIf=\"tabIndex==1\" class=\"sme-position-flex-auto sme-arrange-stack-v\">\n              <h4 class=\"sme-position-flex-none\">Simple Tree</h4>\n              <div class=\"sme-layout-relative sme-position-flex-auto\">\n                  <sme-tree-table #simpleTreeTable [items]=\"sampleData1\" [(selection)]=\"selectedData1\" class=\"sme-layout-absolute sme-position-inset-none\" [showHeader]=\"false\"\n                      [showGrid]=\"false\" [showLeftMargin]=\"false\" [getItemIdentityFunction]=\"getSampleDataItemIdentity\">\n                      <sme-tree-table-column field=\"label\" header=\"Name\" sortable=\"true\" width=\"40%\">\n                          <ng-template let-data>\n                              <span *ngIf=\"data.type==='folder'\" class=\"sme-icon sme-icon-folder\"></span>\n                              <span *ngIf=\"data.type!=='folder'\" class=\"placeholder\"></span>\n                              <strong>{{data.label}}</strong>\n                          </ng-template>\n                      </sme-tree-table-column>\n                  </sme-tree-table>\n              </div>\n              <div class=\"sme-position-flex-none\">\n                  <button (click)=\"scrollSelectedDataIntoView()\">Scroll selected data into view</button>\n                  Selected Item: {{selectedData1 && selectedData1.data.label}}\n                  <button (click)=\"refreshSampleData1()\">Refresh Data</button>\n              </div>\n          </section>\n          <section *ngIf=\"tabIndex==2\" class=\"sme-position-flex-auto sme-arrange-stack-v\">\n              <h4 class=\"sme-position-flex-none\">Tree Table</h4>\n              <div class=\"sme-layout-relative sme-position-flex-auto\">\n                  <sme-tree-table [items]=\"sampleData1\" [(selection)]=\"selectedData1\" class=\"sme-layout-absolute sme-position-inset-none\">\n                      <sme-tree-table-column field=\"label\" header=\"Name\" sortable=\"true\" width=\"40%\">\n                          <ng-template let-data>\n                              <span *ngIf=\"data.type==='folder'\" class=\"sme-icon sme-icon-folder\"></span>\n                              <span *ngIf=\"data.type!=='folder'\" class=\"placeholder\"></span>\n                              <strong>{{data.label}}</strong>\n                          </ng-template>\n                      </sme-tree-table-column>\n                      <sme-tree-table-column field=\"ext\" header=\"Extension\" sortable=\"true\"></sme-tree-table-column>\n                      <sme-tree-table-column field=\"createDateTime\" header=\"Creation Date Time\" sortable=\"true\"></sme-tree-table-column>\n                      <sme-tree-table-column field=\"modificationDateTime\" header=\"Modification Date Time\" sortable=\"true\"></sme-tree-table-column>\n                  </sme-tree-table>\n              </div>\n              <div class=\"sme-position-flex-none\">\n                  Selected Item: {{selectedData1 && selectedData1.data.label}}\n              </div>\n          </section>\n          <section *ngIf=\"tabIndex==3\" class=\"sme-position-flex-auto sme-arrange-stack-v\">\n              <h4 class=\"sme-position-flex-none\">Multiple Selection in Tree Table</h4>\n              <div class=\"sme-layout-relative sme-position-flex-auto\">\n                  <sme-tree-table [items]=\"sampleData1\" [(selection)]=\"selectedData2\" class=\"sme-layout-absolute sme-position-inset-none\" selectionMode=\"multiple\">\n                      <sme-tree-table-column field=\"label\" header=\"Name\" sortable=\"true\" width=\"40%\"></sme-tree-table-column>\n                      <sme-tree-table-column field=\"ext\" header=\"Extension\" sortable=\"true\"></sme-tree-table-column>\n                      <sme-tree-table-column field=\"createDateTime\" header=\"Creation Date Time\" sortable=\"true\"></sme-tree-table-column>\n                      <sme-tree-table-column field=\"modificationDateTime\" header=\"Modification Date Time\" sortable=\"true\"></sme-tree-table-column>\n                  </sme-tree-table>\n              </div>\n              <div class=\"sme-position-flex-none\">\n                  <span>Selected Items: </span>\n                  <span class=\"selectionCount\">\n                      <span *ngIf=\"selectedData2 && selectedData2.length<10\">\n                          <span *ngFor=\"let item of selectedData2\">{{item.data.label}} </span>\n                      </span>\n                      <span *ngIf=\"selectedData2 && selectedData2.length>=10\">\n                          {{selectedData2.length}} items\n                      </span>\n                  </span>\n                  <button class=\"clearSelection\" (click)=\"clearSelection()\">Clear Selection</button>\n              </div>\n          </section>\n      </div>\n    "
                },] },
    ];
    /** @nocollapse */
    TreeTableExampleComponent.ctorParameters = function () { return []; };
    TreeTableExampleComponent.propDecorators = {
        'simpleTreeTable': [{ type: ViewChild, args: ['simpleTreeTable',] },],
    };
    return TreeTableExampleComponent;
}());
export { TreeTableExampleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kZXYtZ3VpZGUvbW9kdWxlcy9jb250cm9scy90cmVlLXRhYmxlL3RyZWUtdGFibGUtZXhhbXBsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQUEsRUFBVyxTQUFBLEVBQVUsTUFBTyxlQUFBLENBQWdCO0FBR3JELE9BQU8sRUFBRSxRQUFBLEVBQVMsTUFBTyxZQUFBLENBQWE7QUFHdEM7SUFRSTtRQUpPLGFBQVEsR0FBRyxDQUFDLENBQUM7UUFLaEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUVNLHNEQUFrQixHQUF6QjtRQUNJLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFTSw2REFBeUIsR0FBaEMsVUFBaUMsSUFBUztRQUN0QyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztJQUN4QyxDQUFDO0lBRU0sNENBQVEsR0FBZixVQUFnQixRQUFnQjtRQUM1QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUM3QixDQUFDO0lBRU0sa0RBQWMsR0FBckI7UUFDSSxJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBRU0sOERBQTBCLEdBQWpDO1FBQ0ksSUFBSSxDQUFDLGVBQWUsQ0FBQywwQkFBMEIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBQ0Usb0NBQVUsR0FBMEI7UUFDM0MsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDO29CQUN0QixRQUFRLEVBQUUscUNBQXFDO29CQUMvQyxNQUFNLEVBQUUsQ0FBQywrWEFZUixDQUFDO29CQUNGLFFBQVEsRUFBRSwrbUxBcUZUO2lCQUNKLEVBQUcsRUFBRTtLQUNMLENBQUM7SUFDRixrQkFBa0I7SUFDWCx3Q0FBYyxHQUFtRSxjQUFNLE9BQUEsRUFDN0YsRUFENkYsQ0FDN0YsQ0FBQztJQUNLLHdDQUFjLEdBQTJDO1FBQ2hFLGlCQUFpQixFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLGlCQUFpQixFQUFHLEVBQUUsRUFBRTtLQUNyRSxDQUFDO0lBQ0YsZ0NBQUM7Q0E3SUQsQUE2SUMsSUFBQTtTQTdJWSx5QkFBeUIiLCJmaWxlIjoidHJlZS10YWJsZS1leGFtcGxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJDOi9CQS80NDcvcy9pbmxpbmVTcmMvIn0=