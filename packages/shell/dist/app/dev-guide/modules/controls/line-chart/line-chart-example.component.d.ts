/// <reference types="chart.js" />
import { AfterViewInit } from '@angular/core';
import { ActivatedRouteSnapshot } from '@angular/router';
import { Observable, Subscription } from 'rxjs';
import { AppContextService, LineChartComponent, LineChartData } from '../../../../../angular';
import { QueryCache } from '../../../../../core';
export declare class LineChartExampleComponent implements AfterViewInit {
    private appContextService;
    chart1: LineChartComponent;
    chart2: LineChartComponent;
    chart3: LineChartComponent;
    chart4: LineChartComponent;
    cpuChartSubscription: Subscription;
    chartData: LinearChartData;
    staticChartData: LinearChartData;
    staticChartData2: LinearChartData;
    tabList1: string[];
    tabList2: string[];
    tabList3: string[];
    groupData: Map<string, LineChartData>[];
    groupData3: Map<string, LineChartData>[];
    lineChartData1: LineChartData;
    lineChartData2: LineChartData;
    lineChartData3: LineChartData;
    lineChartData4: LineChartData;
    cpuQueryCache: QueryCache<any, any>;
    initialized: boolean;
    clickedTab: number;
    loadingMessage: string;
    tooltipFormatters: ((input: number) => string)[];
    private tick;
    static navigationTitle(appContextService: AppContextService, snapshot: ActivatedRouteSnapshot): string;
    constructor(appContextService: AppContextService);
    ngAfterViewInit(): void;
    private updateCpuChartData();
    getProcessors(): Observable<any>;
    getStaticData(): number[];
    getStaticData2(): number[];
    getStaticData3(): number[];
    setTabGroupData(): void;
    mockAssyncDataLoading(tabIndex: number): void;
    showClickedTab(tabPosition: number): void;
    dummyFormatter1(input: number): string;
    dummyFormatter2(input: number): string;
}
