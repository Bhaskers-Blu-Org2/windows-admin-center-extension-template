import { Component } from '@angular/core';
var PivotComponent = /** @class */ (function () {
    function PivotComponent() {
    }
    PivotComponent.navigationTitle = function (appContextService, snapshot) {
        return 'Pivot';
    };
    PivotComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sme-ng2-pivot',
                    template: "\n      <div class=\"sme-layout-absolute sme-position-inset-none sme-documentation\">\n          <h1>Pivot</h1>\n          <p>\n              <span>The Pivot is a css only control you can use for tab based navigation. It is based on aria attributes so the specific tags are irrelevant to the style. See</span>\n              <a class=\"sme-link\" routerLink=\"/dev/styles/spacing\">Accessibility</a>\n              <span>for more information.</span>\n          </p>\n          <p>For performance, it is usually better to lazy load the contents of the tab using routing or some other mechanism.</p>\n\n          <h2>Class Structure</h2>\n          <section>\n              <h3>Pivot Container</h3>\n              <p>The Pivot starts with a container element. this element must have the <b>.sme-pivot</b> class.</p>\n              <p>All other pvot elements must be within this container.</p>\n          </section>\n\n          <section>\n              <h3>Pivot Header</h3>\n              <p>The Pivot Header is required and must have the <b>role=\"tablist\"</b> attribute assigned</p>\n\n              <p>inside the header each child must apply the <b>role=\"tab\"</b> attribute.</p>\n\n              <p>There are two ways to set up this control depending on if lazy loading is implemented.</p>\n\n              <section>\n                  <h3>Non-Lazy</h3>\n                  <p>In this approach, each 'tab' element should: </p>\n                  <ol>\n                      <li>Use the <b>aria-controls</b> attriute to specify the id of the tab panel that this tab belongs to.</li>\n                      <li>Use the <b>aria-selected</b> attriute (set to true or false) to indicate the selected tab and get the appropriete styling</li>\n                  </ol>\n\n                  <h3>Lazy</h3>\n                  <p>This approach is usually best when working with frameworks like angular and rxjs. In this approach, each 'tab' element should:</p>\n                  <ol>\n                      <li>Apply the <b>.sme-active</b> class to indicate the selected tab and get the appropriete styling</li>\n                  </ol>\n                  <p>Note: this has some none accessability issues and will be address with an angular control in a future release to use the aria-selected attribute instead of the .sme-active class.</p>\n              </section>\n          </section>\n\n\n          <section>\n              <h3>Pivot Content</h3>\n              <p>The Pivot Content is optional and defined by elements with the <b>role=\"tabpanel\"</b> attribute assigned. This content is only applicable to non-lazy load scenarios.</p>\n              <p>Each 'tabpanel' element should:</p>\n              <ol>\n                  <li>Apply an <b>id</b> attribute the corrosponds to a 'tab' elements <b>aria-controls</b> attribute</li>\n                  <li>Use the <b>aria-hidden</b> attriute to indicate the selected tab content and get the appropriete visibility</li>\n              </ol>\n          </section>\n\n\n          <h2>Examples</h2>\n\n          <section>\n              <h3>Non-Lazy</h3>\n\n              <code>&lt;div class=\"sme-pivot\"&gt;\n           &lt;header role=\"tablist\"&gt;\n               &lt;a role=\"tab\" aria-controls=\"pivot-target-1\" href=\"#\" aria-selected=\"true\" class=\"sme-active\"&gt;Tab 1&lt;/a&gt;\n               &lt;a role=\"tab\" aria-controls=\"pivot-target-2\" href=\"#\" aria-selected=\"false\"&gt;Tab 2&lt;/a&gt;\n               &lt;a role=\"tab\" aria-controls=\"pivot-target-3\" href=\"#\" aria-selected=\"false\"&gt;Tab 3&lt;/a&gt;\n           &lt;/header&gt;\n           &lt;section role=\"tabpanel\" id=\"pivot-target-1\" aria-hidden=\"false\"&gt; Tab 1 &lt;/section&gt;\n           &lt;section role=\"tabpanel\" id=\"pivot-target-2\" aria-hidden=\"true\"&gt; Tab 1 &lt;/section&gt;\n           &lt;section role=\"tabpanel\" id=\"pivot-target-3\" aria-hidden=\"true\"&gt; Tab 1 &lt;/section&gt;\n       &lt;/div&gt;</code>\n\n          </section>\n\n\n          <section>\n              <h3>Lazy (using Angular's router directives)</h3>\n              <code>&lt;div class=\"sme-pivot\"&gt;\n          &lt;div role=\"tablist\"&gt;\n              &lt;a role=\"tab\" routerLink=\"/route1\" routerLinkActive=\"sme-active\"&gt;Route 1&lt;/a&gt;\n              &lt;a role=\"tab\" routerLink=\"/route2\" routerLinkActive=\"sme-active\"&gt;Route 2&lt;/a&gt;\n              &lt;a role=\"tab\" routerLink=\"/route3\" routerLinkActive=\"sme-active\"&gt;Route 3&lt;/a&gt;\n          &lt;/div&gt;\n      &lt;/div&gt;</code>\n          </section>\n\n      </div>\n    "
                },] },
    ];
    /** @nocollapse */
    PivotComponent.ctorParameters = function () { return []; };
    return PivotComponent;
}());
export { PivotComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kZXYtZ3VpZGUvbW9kdWxlcy9zdHlsZXMvcGl2b3QvcGl2b3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFBLEVBQVUsTUFBTyxlQUFBLENBQWdCO0FBSzFDO0lBQUE7SUFtR0EsQ0FBQztJQWpHaUIsOEJBQWUsR0FBN0IsVUFBOEIsaUJBQW9DLEVBQUUsUUFBZ0M7UUFDaEcsTUFBTSxDQUFDLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBQ0UseUJBQVUsR0FBMEI7UUFDM0MsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDO29CQUN0QixRQUFRLEVBQUUsZUFBZTtvQkFDekIsUUFBUSxFQUFFLHFnSkFxRlQ7aUJBQ0osRUFBRyxFQUFFO0tBQ0wsQ0FBQztJQUNGLGtCQUFrQjtJQUNYLDZCQUFjLEdBQW1FLGNBQU0sT0FBQSxFQUM3RixFQUQ2RixDQUM3RixDQUFDO0lBQ0YscUJBQUM7Q0FuR0QsQUFtR0MsSUFBQTtTQW5HWSxjQUFjIiwiZmlsZSI6InBpdm90LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJDOi9CQS80NDcvcy9pbmxpbmVTcmMvIn0=