import { Component } from '@angular/core';
var ToggleSwitchStylesComponent = /** @class */ (function () {
    function ToggleSwitchStylesComponent() {
    }
    ToggleSwitchStylesComponent.decorators = [
        { type: Component, args: [{
                    selector: 'sme-ng2-form-styles-toggle-switch',
                    template: "\n      <div class=\"sme-layout-absolute sme-position-inset-none sme-documentation\">\n\n          <p>The toggle switch is semantically a checkbox, but mimics a tactile switch that can be turned on or off.</p>\n          <p>To make a checkbox appear as a toggle switch, use the '.sme-toggle-switch' class instead of <a class=\"sme-link\" routerLink=\"/dev/styles/forms/checkbox\">'.sme-checkbox</a>.</p>\n          <p>The intermediate state is invalid for toggle switches. They should always be on or off.</p>\n\n          <h3>Unselected</h3>\n          <section>\n              <div class=\"sme-toggle-switch  sme-documentation-example\">\n                  <label>\n                          <input aria-label=\"Control label\" type=\"checkbox\" aria-checked=\"false\">\n                          <span aria-hidden=\"true\">Control label</span>\n                      </label>\n              </div>\n              <code>&lt;div class=\"sme-toggle-switch\"&gt;\n              &lt;label&gt;\n                  &lt;input aria-label=\"Control label\" type=\"checkbox\" aria-checked=\"false\"&gt;\n                  &lt;span aria-hidden=\"true\"&gt;Control label&lt;/span&gt;\n              &lt;/label&gt;\n          &lt;/div&gt;</code>\n\n          </section>\n          <h3>Selected</h3>\n          <section>\n              <div class=\"sme-toggle-switch  sme-documentation-example\">\n                  <label>\n                          <input aria-label=\"Control label\" type=\"checkbox\" checked=\"checked\" aria-checked=\"true\">\n                          <span aria-hidden=\"true\">Control label</span>\n                      </label>\n              </div>\n              <code>&lt;div class=\"sme-toggle-switch\"&gt;\n              &lt;label&gt;\n                  &lt;input aria-label=\"Control label\" type=\"checkbox\" checked=\"checked\" aria-checked=\"true\"&gt;\n                  &lt;span aria-hidden=\"true\"&gt;Control label&lt;/span&gt;\n              &lt;/label&gt;\n          &lt;/div&gt;</code>\n          </section>\n          <h3>Disabled</h3>\n          <section>\n              <div class=\"sme-toggle-switch  sme-documentation-example\">\n                  <label>\n                      <input aria-label=\"Control label\" type=\"checkbox\" disabled=\"disabled\" aria-checked=\"false\">\n                      <span aria-hidden=\"true\">Control label</span>\n                  </label>\n              </div>\n              <code>&lt;div class=\"sme-toggle-switch\"&gt;\n              &lt;label&gt;\n                  &lt;input aria-label=\"Control label\" type=\"checkbox\" disabled=\"disabled\" aria-checked=\"false\"&gt;\n                  &lt;span aria-hidden=\"true\"&gt;Control label&lt;/span&gt;\n              &lt;/label&gt;\n          &lt;/div&gt;</code>\n          </section>\n          <h3>Disabled and Selected</h3>\n          <section>\n              <div class=\"sme-toggle-switch\">\n                  <label>\n                      <input aria-label=\"Control label\" type=\"checkbox\" checked=\"checked\" disabled=\"disabled\" aria-checked=\"true\">\n                      <span aria-hidden=\"true\">Control label</span>\n                  </label>\n              </div>\n              <code>&lt;div class=\"sme-toggle-switch  sme-documentation-example\"&gt;\n              &lt;label&gt;\n                  &lt;input aria-label=\"Control label\" type=\"checkbox\" checked=\"checked\" disabled=\"disabled\" aria-checked=\"true\"&gt;\n                  &lt;span aria-hidden=\"true\"&gt;Control label&lt;/span&gt;\n              &lt;/label&gt;\n          &lt;/div&gt;</code>\n          </section>\n      </div>\n    "
                },] },
    ];
    /** @nocollapse */
    ToggleSwitchStylesComponent.ctorParameters = function () { return []; };
    return ToggleSwitchStylesComponent;
}());
export { ToggleSwitchStylesComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9kZXYtZ3VpZGUvbW9kdWxlcy9zdHlsZXMvZm9ybS90b2dnbGUtc3dpdGNoL3RvZ2dsZS1zd2l0Y2gtc3R5bGVzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBQSxFQUFVLE1BQU8sZUFBQSxDQUFnQjtBQUcxQztJQUFBO0lBOEVBLENBQUM7SUE5RWlELHNDQUFVLEdBQTBCO1FBQ3RGLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQztvQkFDdEIsUUFBUSxFQUFFLG1DQUFtQztvQkFDN0MsUUFBUSxFQUFFLDBrSEFxRVQ7aUJBQ0osRUFBRyxFQUFFO0tBQ0wsQ0FBQztJQUNGLGtCQUFrQjtJQUNYLDBDQUFjLEdBQW1FLGNBQU0sT0FBQSxFQUM3RixFQUQ2RixDQUM3RixDQUFDO0lBQ0Ysa0NBQUM7Q0E5RUQsQUE4RUMsSUFBQTtTQTlFWSwyQkFBMkIiLCJmaWxlIjoidG9nZ2xlLXN3aXRjaC1zdHlsZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IkM6L0JBLzQ0Ny9zL2lubGluZVNyYy8ifQ==